{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "@quojs/react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 2,
			"name": "context/StoreContext",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "StoreContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isPublic": true,
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "React Context carrying a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StoreInstance",
								"target": {
									"packageName": "@quojs/core",
									"packagePath": "dist/types/src/types.d.ts",
									"qualifiedName": "StoreInstance"
								}
							},
							{
								"kind": "text",
								"text": " for Quo.js React bindings."
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "- The default value is "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ". Consumers should either:\n  1) Be wrapped with "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StoreProvider"
									},
									{
										"kind": "text",
										"text": ", or\n  2) Use a helper hook that throws a friendly error when the context is "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ".\n- You can scope multiple independent stores by nesting multiple providers."
									}
								]
							},
							{
								"tag": "@example",
								"name": "Basic usage",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nimport { useContext } from \"react\";\nimport { StoreContext } from \"@quojs/react\";\n\nexport function Counter() {\n  const store = useContext(StoreContext);\n  if (!store) throw new Error(\"StoreProvider is missing\");\n  const state = store.getState();\n  return <span>{state.counter.value}</span>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "context/StoreContext.ts",
							"line": 28,
							"character": 13,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/context/StoreContext.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@types/react",
							"packagePath": "index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@quojs/core",
											"packagePath": "dist/types/src/types.d.ts",
											"qualifiedName": "StoreInstance"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "StoreInstance",
										"package": "@quojs/core"
									}
								]
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "context/StoreContext.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/context/StoreContext.ts#L1"
				}
			]
		},
		{
			"id": 256,
			"name": "context/StoreProvider",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 257,
					"name": "StoreProvider",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isPublic": true,
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "React provider that places a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StoreInstance",
								"target": {
									"packageName": "@quojs/core",
									"packagePath": "dist/types/src/types.d.ts",
									"qualifiedName": "StoreInstance"
								}
							},
							{
								"kind": "text",
								"text": " into "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StoreContext",
								"target": 3
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "props.store",
								"content": [
									{
										"kind": "text",
										"text": "The Quo.js store instance to expose to descendant components."
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.children",
								"content": [
									{
										"kind": "text",
										"text": "React subtree that will consume the store."
									}
								]
							},
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "- Wrap your app (or a subtree) to make the store available via "
									},
									{
										"kind": "code",
										"text": "`useContext(StoreContext)`"
									},
									{
										"kind": "text",
										"text": "\n  or any higher-level hooks you expose (e.g., "
									},
									{
										"kind": "code",
										"text": "`useSlice`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`useDispatch`"
									},
									{
										"kind": "text",
										"text": ").\n- You may nest multiple "
									},
									{
										"kind": "code",
										"text": "`StoreProvider`"
									},
									{
										"kind": "text",
										"text": "s to scope different stores to different subtrees.\n- In Next.js App Router, this component must be used in a **client** boundary."
									}
								]
							},
							{
								"tag": "@example",
								"name": "App wrapper",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n'use client';\nimport { StoreProvider } from '@quojs/react';\nimport { createStore } from '@quojs/core';\n\nconst store = createStore({\n  name: 'App',\n  reducer: {\n    counter: {\n      state: { value: 0 },\n      actions: [['ui','increment']],\n      reducer(s, a) { return a.event === 'increment' ? { value: s.value + a.payload } : s; }\n    }\n  }\n});\n\nexport function AppProviders({ children }: { children: React.ReactNode }) {\n  return <StoreProvider store={store}>{children}</StoreProvider>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "context/StoreProvider.tsx",
							"line": 41,
							"character": 13,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/context/StoreProvider.tsx#L41"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@types/react",
							"packagePath": "index.d.ts",
							"qualifiedName": "React.FC"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 258,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 260,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Descendant subtree that can consume the store."
													}
												]
											},
											"sources": [
												{
													"fileName": "context/StoreProvider.tsx",
													"line": 45,
													"character": 2,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/context/StoreProvider.tsx#L45"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.ReactNode"
												},
												"name": "ReactNode",
												"package": "@types/react",
												"qualifiedName": "React.ReactNode"
											}
										},
										{
											"id": 259,
											"name": "store",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Quo.js store instance placed into context."
													}
												]
											},
											"sources": [
												{
													"fileName": "context/StoreProvider.tsx",
													"line": 43,
													"character": 2,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/context/StoreProvider.tsx#L43"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@quojs/core",
													"packagePath": "dist/types/src/types.d.ts",
													"qualifiedName": "StoreInstance"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "StoreInstance",
												"package": "@quojs/core"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												260,
												259
											]
										}
									],
									"sources": [
										{
											"fileName": "context/StoreProvider.tsx",
											"line": 41,
											"character": 37,
											"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/context/StoreProvider.tsx#L41"
										}
									]
								}
							}
						],
						"name": "React.FC",
						"package": "@types/react"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						257
					]
				}
			],
			"sources": [
				{
					"fileName": "context/StoreProvider.tsx",
					"line": 1,
					"character": 0,
					"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/context/StoreProvider.tsx#L1"
				}
			]
		},
		{
			"id": 4,
			"name": "hooks/createQuoHooks",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 44,
					"name": "UseSliceProp",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Overload shape for the "
							},
							{
								"kind": "code",
								"text": "`useSliceProp`"
							},
							{
								"kind": "text",
								"text": " hook returned by "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createQuoHooks",
								"target": 10
							},
							{
								"kind": "text",
								"text": ".\nExported so TypeDoc can include and cross-link it from factory docs."
							}
						]
					},
					"sources": [
						{
							"fileName": "hooks/createQuoHooks.ts",
							"line": 24,
							"character": 12,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L24"
						}
					],
					"typeParameters": [
						{
							"id": 87,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Slice name union."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 88,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "State record keyed by "
									},
									{
										"kind": "code",
										"text": "`R`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 87,
										"name": "R",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 45,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "hooks/createQuoHooks.ts",
									"line": 24,
									"character": 71,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L24"
								}
							],
							"signatures": [
								{
									"id": 46,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "hooks/createQuoHooks.ts",
											"line": 26,
											"character": 2,
											"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L26"
										}
									],
									"typeParameters": [
										{
											"id": 47,
											"name": "R1",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 48,
											"name": "P",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 49,
											"name": "spec",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 50,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 52,
															"name": "property",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 27,
																	"character": 25,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L27"
																}
															],
															"type": {
																"type": "reference",
																"target": 48,
																"name": "P",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 51,
															"name": "reducer",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 27,
																	"character": 12,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L27"
																}
															],
															"type": {
																"type": "reference",
																"target": 47,
																"name": "R1",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																52,
																51
															]
														}
													],
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 27,
															"character": 10,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L27"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 47,
													"name": "R1",
													"package": "@quojs/react",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 88,
													"name": "S",
													"package": "@quojs/react",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "reference",
												"target": 48,
												"name": "P",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											}
										],
										"name": "PathValue",
										"package": "@quojs/react"
									}
								},
								{
									"id": 53,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "hooks/createQuoHooks.ts",
											"line": 31,
											"character": 2,
											"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L31"
										}
									],
									"typeParameters": [
										{
											"id": 54,
											"name": "R1",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 55,
											"name": "P",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 56,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 57,
											"name": "spec",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 58,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 60,
															"name": "property",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 32,
																	"character": 25,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L32"
																}
															],
															"type": {
																"type": "reference",
																"target": 55,
																"name": "P",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 59,
															"name": "reducer",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 32,
																	"character": 12,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L32"
																}
															],
															"type": {
																"type": "reference",
																"target": 54,
																"name": "R1",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																60,
																59
															]
														}
													],
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 32,
															"character": 10,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L32"
														}
													]
												}
											}
										},
										{
											"id": 61,
											"name": "map",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 62,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 33,
															"character": 9,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L33"
														}
													],
													"signatures": [
														{
															"id": 63,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 33,
																	"character": 9,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L33"
																}
															],
															"parameters": [
																{
																	"id": 64,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": -1,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"target": 54,
																					"name": "R1",
																					"package": "@quojs/react",
																					"refersToTypeParameter": true
																				},
																				"objectType": {
																					"type": "reference",
																					"target": 88,
																					"name": "S",
																					"package": "@quojs/react",
																					"refersToTypeParameter": true
																				}
																			},
																			{
																				"type": "reference",
																				"target": 55,
																				"name": "P",
																				"package": "@quojs/react",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "PathValue",
																		"package": "@quojs/react"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": 56,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										},
										{
											"id": 65,
											"name": "isEqual",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 66,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 34,
															"character": 14,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L34"
														}
													],
													"signatures": [
														{
															"id": 67,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 34,
																	"character": 14,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L34"
																}
															],
															"parameters": [
																{
																	"id": 68,
																	"name": "a",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 56,
																		"name": "T",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 69,
																	"name": "b",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 56,
																		"name": "T",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 56,
										"name": "T",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 70,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "hooks/createQuoHooks.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L38"
										}
									],
									"typeParameters": [
										{
											"id": 71,
											"name": "R1",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 72,
											"name": "P",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 73,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 74,
											"name": "spec",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 75,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 77,
															"name": "property",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 39,
																	"character": 25,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L39"
																}
															],
															"type": {
																"type": "reference",
																"target": 72,
																"name": "P",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 76,
															"name": "reducer",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 39,
																	"character": 12,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L39"
																}
															],
															"type": {
																"type": "reference",
																"target": 71,
																"name": "R1",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																77,
																76
															]
														}
													],
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 39,
															"character": 10,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L39"
														}
													]
												}
											}
										},
										{
											"id": 78,
											"name": "map",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 79,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 40,
															"character": 9,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L40"
														}
													],
													"signatures": [
														{
															"id": 80,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 40,
																	"character": 9,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L40"
																}
															],
															"parameters": [
																{
																	"id": 81,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": 73,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										},
										{
											"id": 82,
											"name": "isEqual",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 83,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 41,
															"character": 14,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L41"
														}
													],
													"signatures": [
														{
															"id": 84,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 41,
																	"character": 14,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L41"
																}
															],
															"parameters": [
																{
																	"id": 85,
																	"name": "a",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 73,
																		"name": "T",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 86,
																	"name": "b",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 73,
																		"name": "T",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 73,
										"name": "T",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 89,
					"name": "UseSliceProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Overload shape for the "
							},
							{
								"kind": "code",
								"text": "`useSliceProps`"
							},
							{
								"kind": "text",
								"text": " hook returned by "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createQuoHooks",
								"target": 10
							},
							{
								"kind": "text",
								"text": ".\nExported so TypeDoc can include and cross-link it from factory docs."
							}
						]
					},
					"sources": [
						{
							"fileName": "hooks/createQuoHooks.ts",
							"line": 53,
							"character": 12,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L53"
						}
					],
					"typeParameters": [
						{
							"id": 107,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Slice name union."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 108,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "State record keyed by "
									},
									{
										"kind": "code",
										"text": "`R`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 107,
										"name": "R",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 90,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "hooks/createQuoHooks.ts",
									"line": 53,
									"character": 72,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L53"
								}
							],
							"signatures": [
								{
									"id": 91,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "hooks/createQuoHooks.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L54"
										}
									],
									"typeParameters": [
										{
											"id": 92,
											"name": "R1",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 93,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 94,
											"name": "specs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 95,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 97,
																"name": "property",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "hooks/createQuoHooks.ts",
																		"line": 57,
																		"character": 6,
																		"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L57"
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "@quojs/core",
																				"packagePath": "dist/types/src/types.d.ts",
																				"qualifiedName": "WithGlob"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@quojs/core",
																						"packagePath": "dist/types/src/types.d.ts",
																						"qualifiedName": "Dotted"
																					},
																					"typeArguments": [
																						{
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"target": 92,
																								"name": "R1",
																								"package": "@quojs/react",
																								"refersToTypeParameter": true
																							},
																							"objectType": {
																								"type": "reference",
																								"target": 108,
																								"name": "S",
																								"package": "@quojs/react",
																								"refersToTypeParameter": true
																							}
																						}
																					],
																					"name": "Dotted",
																					"package": "@quojs/core"
																				}
																			],
																			"name": "WithGlob",
																			"package": "@quojs/core"
																		},
																		{
																			"type": "typeOperator",
																			"operator": "readonly",
																			"target": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"packageName": "@quojs/core",
																						"packagePath": "dist/types/src/types.d.ts",
																						"qualifiedName": "WithGlob"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"packageName": "@quojs/core",
																								"packagePath": "dist/types/src/types.d.ts",
																								"qualifiedName": "Dotted"
																							},
																							"typeArguments": [
																								{
																									"type": "indexedAccess",
																									"indexType": {
																										"type": "reference",
																										"target": 92,
																										"name": "R1",
																										"package": "@quojs/react",
																										"refersToTypeParameter": true
																									},
																									"objectType": {
																										"type": "reference",
																										"target": 108,
																										"name": "S",
																										"package": "@quojs/react",
																										"refersToTypeParameter": true
																									}
																								}
																							],
																							"name": "Dotted",
																							"package": "@quojs/core"
																						}
																					],
																					"name": "WithGlob",
																					"package": "@quojs/core"
																				}
																			}
																		}
																	]
																}
															},
															{
																"id": 96,
																"name": "reducer",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "hooks/createQuoHooks.ts",
																		"line": 56,
																		"character": 6,
																		"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L56"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 92,
																	"name": "R1",
																	"package": "@quojs/react",
																	"refersToTypeParameter": true
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	97,
																	96
																]
															}
														],
														"sources": [
															{
																"fileName": "hooks/createQuoHooks.ts",
																"line": 55,
																"character": 17,
																"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L55"
															}
														]
													}
												}
											}
										},
										{
											"id": 98,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 99,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 59,
															"character": 14,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L59"
														}
													],
													"signatures": [
														{
															"id": 100,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 59,
																	"character": 14,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L59"
																}
															],
															"parameters": [
																{
																	"id": 101,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "@quojs/core",
																			"packagePath": "dist/types/src/types.d.ts",
																			"qualifiedName": "DeepReadonly"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 108,
																				"name": "S",
																				"package": "@quojs/react",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "DeepReadonly",
																		"package": "@quojs/core"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": 93,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										},
										{
											"id": 102,
											"name": "isEqual",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 103,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 60,
															"character": 14,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L60"
														}
													],
													"signatures": [
														{
															"id": 104,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 60,
																	"character": 14,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L60"
																}
															],
															"parameters": [
																{
																	"id": 105,
																	"name": "a",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 93,
																		"name": "T",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 106,
																	"name": "b",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 93,
																		"name": "T",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 93,
										"name": "T",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 10,
					"name": "createQuoHooks",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/createQuoHooks.ts",
							"line": 146,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 11,
							"name": "createQuoHooks",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Factory that binds **typed React hooks** to a specific "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StoreInstance",
										"target": {
											"packageName": "@quojs/core",
											"packagePath": "dist/types/src/types.d.ts",
											"qualifiedName": "StoreInstance"
										}
									},
									{
										"kind": "text",
										"text": " via context.\n\nCall this **once per app** (or per store instance type) and export the returned hooks."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object with pre-bound hooks:\n- "
											},
											{
												"kind": "code",
												"text": "`useStore()`"
											},
											{
												"kind": "text",
												"text": " – access the store from context (throws if missing).\n- "
											},
											{
												"kind": "code",
												"text": "`useDispatch()`"
											},
											{
												"kind": "text",
												"text": " – stable dispatch reference.\n- "
											},
											{
												"kind": "code",
												"text": "`useSelector(selector, isEqual?)`"
											},
											{
												"kind": "text",
												"text": " – external-store selector with memoized equality.\n- "
											},
											{
												"kind": "code",
												"text": "`useSliceProp(spec, map?, isEqual?)`"
											},
											{
												"kind": "text",
												"text": " – subscribe to a **single** dotted path (or glob).\n- "
											},
											{
												"kind": "code",
												"text": "`useSliceProps(specs, selector, isEqual?)`"
											},
											{
												"kind": "text",
												"text": " – subscribe to **many** paths/globs and compute a derived value.\n- "
											},
											{
												"kind": "code",
												"text": "`shallowEqual`"
											},
											{
												"kind": "text",
												"text": " – helper equality for objects."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n// hooks.ts\nimport { StoreContext } from '../context/StoreContext';\nexport const { useStore, useDispatch, useSelector, useSliceProp, useSliceProps } =\n  createQuoHooks<'counter' | 'todos', AppState, AM>(StoreContext);\n\n// component.tsx\nfunction Counter() {\n  const value = useSliceProp({ reducer: 'counter', property: 'value' });\n  const dispatch = useDispatch();\n  return <button onClick={() => dispatch('ui','increment',1)}>{value}</button>;\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/createQuoHooks.ts",
									"line": 146,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L146"
								}
							],
							"typeParameters": [
								{
									"id": 12,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Slice name union (string literal union)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State record keyed by "
											},
											{
												"kind": "code",
												"text": "`R`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 12,
												"name": "R",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 14,
									"name": "AM",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Action map for "
											},
											{
												"kind": "code",
												"text": "`(channel → event → payload)`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@quojs/core",
											"packagePath": "dist/types/src/types.d.ts",
											"qualifiedName": "ActionMapBase"
										},
										"name": "ActionMapBase",
										"package": "@quojs/core"
									}
								}
							],
							"parameters": [
								{
									"id": 15,
									"name": "StoreContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A React context that carries "
											},
											{
												"kind": "code",
												"text": "`StoreInstance<R,S,AM> | null`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.Context"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"packageName": "@quojs/core",
															"packagePath": "dist/types/src/types.d.ts",
															"qualifiedName": "StoreInstance"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 12,
																"name": "R",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 13,
																"name": "S",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 14,
																"name": "AM",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														],
														"name": "StoreInstance",
														"package": "@quojs/core"
													}
												]
											}
										],
										"name": "Context",
										"package": "@types/react",
										"qualifiedName": "React.Context"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38,
											"name": "shallowEqual",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/createQuoHooks.ts",
													"line": 422,
													"character": 4,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L422"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 39,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isPublic": true
													},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 96,
															"character": 16,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L96"
														}
													],
													"signatures": [
														{
															"id": 40,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isPublic": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Shallow equality for plain records using "
																	},
																	{
																		"kind": "code",
																		"text": "`Object.is`"
																	},
																	{
																		"kind": "text",
																		"text": " per-key."
																	}
																],
																"blockTags": [
																	{
																		"tag": "@example",
																		"content": [
																			{
																				"kind": "code",
																				"text": "```ts\nshallowEqual({ a: 1, b: 2 }, { a: 1, b: 2 }) // true\nshallowEqual({ a: 1 }, { a: 1, b: 2 })       // false (different keys)\n```"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 96,
																	"character": 16,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L96"
																}
															],
															"typeParameters": [
																{
																	"id": 41,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "typescript",
																			"packagePath": "lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	}
																}
															],
															"parameters": [
																{
																	"id": 42,
																	"name": "a",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 7,
																		"name": "T",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 43,
																	"name": "b",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 7,
																		"name": "T",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										},
										{
											"id": 20,
											"name": "useDispatch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/createQuoHooks.ts",
													"line": 418,
													"character": 4,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L418"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 21,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isPublic": true
													},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 181,
															"character": 11,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L181"
														}
													],
													"signatures": [
														{
															"id": 22,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isPublic": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Returns the store’s "
																	},
																	{
																		"kind": "code",
																		"text": "`dispatch`"
																	},
																	{
																		"kind": "text",
																		"text": " function (stable reference)."
																	}
																],
																"blockTags": [
																	{
																		"tag": "@example",
																		"content": [
																			{
																				"kind": "code",
																				"text": "```tsx\nconst dispatch = useDispatch();\ndispatch('ui','toggle',true);\n```"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 181,
																	"character": 11,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L181"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "@quojs/core",
																	"packagePath": "dist/types/src/types.d.ts",
																	"qualifiedName": "Dispatch"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 14,
																		"name": "AM",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Dispatch",
																"package": "@quojs/core"
															}
														}
													]
												}
											}
										},
										{
											"id": 23,
											"name": "useSelector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/createQuoHooks.ts",
													"line": 419,
													"character": 4,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L419"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 24,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isPublic": true
													},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 199,
															"character": 11,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L199"
														}
													],
													"signatures": [
														{
															"id": 25,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isPublic": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Selects a derived value from the store using an external-store subscription."
																	}
																],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The selected value, memoized by "
																			},
																			{
																				"kind": "code",
																				"text": "`isEqual`"
																			},
																			{
																				"kind": "text",
																				"text": "."
																			}
																		]
																	},
																	{
																		"tag": "@example",
																		"content": [
																			{
																				"kind": "code",
																				"text": "```tsx\nconst total = useSelector(s => s.todos.items.length);\n```"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 199,
																	"character": 11,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L199"
																}
															],
															"typeParameters": [
																{
																	"id": 26,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {}
																}
															],
															"parameters": [
																{
																	"id": 27,
																	"name": "selector",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "code",
																				"text": "`(state) => value`"
																			},
																			{
																				"kind": "text",
																				"text": " derived from the current immutable state."
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 28,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "hooks/createQuoHooks.ts",
																					"line": 200,
																					"character": 14,
																					"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L200"
																				}
																			],
																			"signatures": [
																				{
																					"id": 29,
																					"name": "__type",
																					"variant": "signature",
																					"kind": 4096,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "hooks/createQuoHooks.ts",
																							"line": 200,
																							"character": 14,
																							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L200"
																						}
																					],
																					"parameters": [
																						{
																							"id": 30,
																							"name": "state",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "reference",
																								"target": {
																									"packageName": "@quojs/core",
																									"packagePath": "dist/types/src/types.d.ts",
																									"qualifiedName": "DeepReadonly"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 13,
																										"name": "S",
																										"package": "@quojs/react",
																										"refersToTypeParameter": true
																									}
																								],
																								"name": "DeepReadonly",
																								"package": "@quojs/core"
																							}
																						}
																					],
																					"type": {
																						"type": "reference",
																						"target": 26,
																						"name": "T",
																						"package": "@quojs/react",
																						"refersToTypeParameter": true
																					}
																				}
																			]
																		}
																	}
																},
																{
																	"id": 31,
																	"name": "isEqual",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Optional equality check (defaults to "
																			},
																			{
																				"kind": "code",
																				"text": "`Object.is`"
																			},
																			{
																				"kind": "text",
																				"text": ") to suppress re-renders."
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 32,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "hooks/createQuoHooks.ts",
																					"line": 201,
																					"character": 13,
																					"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L201"
																				}
																			],
																			"signatures": [
																				{
																					"id": 33,
																					"name": "__type",
																					"variant": "signature",
																					"kind": 4096,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "hooks/createQuoHooks.ts",
																							"line": 201,
																							"character": 13,
																							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L201"
																						}
																					],
																					"parameters": [
																						{
																							"id": 34,
																							"name": "a",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "reference",
																								"target": 26,
																								"name": "T",
																								"package": "@quojs/react",
																								"refersToTypeParameter": true
																							}
																						},
																						{
																							"id": 35,
																							"name": "b",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "reference",
																								"target": 26,
																								"name": "T",
																								"package": "@quojs/react",
																								"refersToTypeParameter": true
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				}
																			]
																		}
																	},
																	"defaultValue": "Object.is"
																}
															],
															"type": {
																"type": "reference",
																"target": 26,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										},
										{
											"id": 36,
											"name": "useSliceProp",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isPublic": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Subscribe to a **single** path/glob within a slice and return the selected value.\nSee overload signatures above."
													}
												]
											},
											"sources": [
												{
													"fileName": "hooks/createQuoHooks.ts",
													"line": 420,
													"character": 4,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L420"
												}
											],
											"type": {
												"type": "reference",
												"target": 44,
												"typeArguments": [
													{
														"type": "reference",
														"target": 12,
														"name": "R",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 13,
														"name": "S",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												],
												"name": "UseSliceProp",
												"package": "@quojs/react"
											}
										},
										{
											"id": 37,
											"name": "useSliceProps",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isPublic": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Subscribe to **many** paths/globs and return a memoized derived value.\nSee overload signatures above."
													}
												]
											},
											"sources": [
												{
													"fileName": "hooks/createQuoHooks.ts",
													"line": 421,
													"character": 4,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L421"
												}
											],
											"type": {
												"type": "reference",
												"target": 89,
												"typeArguments": [
													{
														"type": "reference",
														"target": 12,
														"name": "R",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 13,
														"name": "S",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												],
												"name": "UseSliceProps",
												"package": "@quojs/react"
											}
										},
										{
											"id": 17,
											"name": "useStore",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/createQuoHooks.ts",
													"line": 417,
													"character": 4,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L417"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 18,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isPublic": true
													},
													"sources": [
														{
															"fileName": "hooks/createQuoHooks.ts",
															"line": 163,
															"character": 11,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L163"
														}
													],
													"signatures": [
														{
															"id": 19,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isPublic": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Returns the current "
																	},
																	{
																		"kind": "inline-tag",
																		"tag": "@link",
																		"text": "StoreInstance",
																		"target": {
																			"packageName": "@quojs/core",
																			"packagePath": "dist/types/src/types.d.ts",
																			"qualifiedName": "StoreInstance"
																		}
																	},
																	{
																		"kind": "text",
																		"text": " from context.\nThrows if used outside of a "
																	},
																	{
																		"kind": "inline-tag",
																		"tag": "@link",
																		"text": "StoreProvider"
																	},
																	{
																		"kind": "text",
																		"text": "."
																	}
																],
																"blockTags": [
																	{
																		"tag": "@example",
																		"content": [
																			{
																				"kind": "code",
																				"text": "```tsx\nconst store = useStore();\nconst state = store.getState();\n```"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "hooks/createQuoHooks.ts",
																	"line": 163,
																	"character": 11,
																	"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L163"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "@quojs/core",
																	"packagePath": "dist/types/src/types.d.ts",
																	"qualifiedName": "StoreInstance"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 12,
																		"name": "R",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 13,
																		"name": "S",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 14,
																		"name": "AM",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "StoreInstance",
																"package": "@quojs/core"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38,
												20,
												23,
												36,
												37,
												17
											]
										}
									],
									"sources": [
										{
											"fileName": "hooks/createQuoHooks.ts",
											"line": 416,
											"character": 9,
											"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L416"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 5,
					"name": "shallowEqual",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/createQuoHooks.ts",
							"line": 96,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L96"
						}
					],
					"signatures": [
						{
							"id": 6,
							"name": "shallowEqual",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shallow equality for plain records using "
									},
									{
										"kind": "code",
										"text": "`Object.is`"
									},
									{
										"kind": "text",
										"text": " per-key."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nshallowEqual({ a: 1, b: 2 }, { a: 1, b: 2 }) // true\nshallowEqual({ a: 1 }, { a: 1, b: 2 })       // false (different keys)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/createQuoHooks.ts",
									"line": 96,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L96"
								}
							],
							"typeParameters": [
								{
									"id": 7,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 8,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 7,
										"name": "T",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 9,
									"name": "b",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 7,
										"name": "T",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						44,
						89
					]
				},
				{
					"title": "Functions",
					"children": [
						10,
						5
					]
				}
			],
			"sources": [
				{
					"fileName": "hooks/createQuoHooks.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/createQuoHooks.ts#L1"
				}
			]
		},
		{
			"id": 109,
			"name": "hooks/hooks",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 118,
					"name": "shallowEqual",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/hooks.ts",
							"line": 134,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L134"
						}
					],
					"signatures": [
						{
							"id": 119,
							"name": "shallowEqual",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shallow object equality using "
									},
									{
										"kind": "code",
										"text": "`Object.is`"
									},
									{
										"kind": "text",
										"text": " per-key."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nshallowEqual({ a: 1 }, { a: 1 }) // true\nshallowEqual({ a: 1 }, { a: 2 }) // false\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/hooks.ts",
									"line": 134,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L134"
								}
							],
							"typeParameters": [
								{
									"id": 120,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 121,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 120,
										"name": "T",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 122,
									"name": "b",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 120,
										"name": "T",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 115,
					"name": "useDispatch",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/hooks.ts",
							"line": 119,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L119"
						}
					],
					"signatures": [
						{
							"id": 116,
							"name": "useDispatch",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the store’s "
									},
									{
										"kind": "code",
										"text": "`dispatch`"
									},
									{
										"kind": "text",
										"text": " function (stable reference)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nconst dispatch = useDispatch<MyAM>();\ndispatch('ui', 'toggle', true);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/hooks.ts",
									"line": 119,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L119"
								}
							],
							"typeParameters": [
								{
									"id": 117,
									"name": "AM",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Action map type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@quojs/core",
											"packagePath": "dist/types/src/types.d.ts",
											"qualifiedName": "ActionMapBase"
										},
										"name": "ActionMapBase",
										"package": "@quojs/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@quojs/core",
									"packagePath": "dist/types/src/types.d.ts",
									"qualifiedName": "Dispatch"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 117,
										"name": "AM",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								],
								"name": "Dispatch",
								"package": "@quojs/core"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "useSelector",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/hooks.ts",
							"line": 164,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L164"
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "useSelector",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Selects a derived value from the store using an external-store subscription.\nRe-renders when the selected value changes per "
									},
									{
										"kind": "code",
										"text": "`isEqual`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nconst total = useSelector((s: AppState) => s.todos.items.length);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/hooks.ts",
									"line": 164,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L164"
								}
							],
							"typeParameters": [
								{
									"id": 125,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State type returned by "
											},
											{
												"kind": "code",
												"text": "`getState()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 126,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Selected value type."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 127,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`(state) => value`"
											},
											{
												"kind": "text",
												"text": " derived from the current state."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 128,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 165,
													"character": 12,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L165"
												}
											],
											"signatures": [
												{
													"id": 129,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 165,
															"character": 12,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L165"
														}
													],
													"parameters": [
														{
															"id": 130,
															"name": "state",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 125,
																"name": "S",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 126,
														"name": "T",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 131,
									"name": "isEqual",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional equality comparator (defaults to "
											},
											{
												"kind": "code",
												"text": "`Object.is`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 132,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 166,
													"character": 11,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L166"
												}
											],
											"signatures": [
												{
													"id": 133,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 166,
															"character": 11,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L166"
														}
													],
													"parameters": [
														{
															"id": 134,
															"name": "a",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 126,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 135,
															"name": "b",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 126,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "Object.is"
								}
							],
							"type": {
								"type": "reference",
								"target": 126,
								"name": "T",
								"package": "@quojs/react",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 136,
					"name": "useSliceProp",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/hooks.ts",
							"line": 228,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L228"
						},
						{
							"fileName": "hooks/hooks.ts",
							"line": 231,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L231"
						},
						{
							"fileName": "hooks/hooks.ts",
							"line": 236,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L236"
						},
						{
							"fileName": "hooks/hooks.ts",
							"line": 241,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L241"
						}
					],
					"signatures": [
						{
							"id": 137,
							"name": "useSliceProp",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fine-grained **single-path** selector for a slice.\n\nRe-renders only when the specified "
									},
									{
										"kind": "code",
										"text": "`reducer.property`"
									},
									{
										"kind": "text",
										"text": " (dotted path) actually changes.\n\n**Supports**\n- Exact root prop: "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data\" }`"
									},
									{
										"kind": "text",
										"text": "\n- Exact deep path: "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data.123.title\" }`"
									},
									{
										"kind": "text",
										"text": "\n- Wildcards (pattern): "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data.*\" }`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`\"data.**\"`"
									},
									{
										"kind": "text",
										"text": "\n\n**Overloads**\n- Exact path (no "
									},
									{
										"kind": "code",
										"text": "`*`"
									},
									{
										"kind": "text",
										"text": "): returns the precise "
									},
									{
										"kind": "code",
										"text": "`PathValue`"
									},
									{
										"kind": "text",
										"text": " when "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": " is omitted\n- Exact path + "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": ": returns "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " from "
									},
									{
										"kind": "code",
										"text": "`map(value)`"
									},
									{
										"kind": "text",
										"text": "\n- Glob path (with "
									},
									{
										"kind": "code",
										"text": "`*`"
									},
									{
										"kind": "text",
										"text": "/"
									},
									{
										"kind": "code",
										"text": "`**`"
									},
									{
										"kind": "text",
										"text": "): requires "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": " and returns "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " from "
									},
									{
										"kind": "code",
										"text": "`map(slice)`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Exact path",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nconst title = useSliceProp<'todos', AppState, 'items.0.title'>(\n  { reducer: 'todos', property: 'items.0.title' }\n);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Map over exact path",
										"content": [
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst len = useSliceProp(\n  { reducer: 'todos', property: 'items' },\n  items => items.length\n);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Glob pattern over slice",
										"content": [
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst titles = useSliceProp(\n  { reducer: 'todos', property: 'items.**' },\n  slice => slice.items.map(x => x.title),\n  shallowEqual\n);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/hooks.ts",
									"line": 228,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L228"
								}
							],
							"typeParameters": [
								{
									"id": 138,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 139,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 138,
												"name": "R",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 140,
									"name": "P",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 141,
									"name": "spec",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 142,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 144,
													"name": "property",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 229,
															"character": 22,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L229"
														}
													],
													"type": {
														"type": "reference",
														"target": 140,
														"name": "P",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 143,
													"name": "reducer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 229,
															"character": 10,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L229"
														}
													],
													"type": {
														"type": "reference",
														"target": 138,
														"name": "R",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														144,
														143
													]
												}
											],
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 229,
													"character": 8,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L229"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": 138,
											"name": "R",
											"package": "@quojs/react",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 139,
											"name": "S",
											"package": "@quojs/react",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": 140,
										"name": "P",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								],
								"name": "PathValue",
								"package": "@quojs/react"
							}
						},
						{
							"id": 145,
							"name": "useSliceProp",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fine-grained **single-path** selector for a slice.\n\nRe-renders only when the specified "
									},
									{
										"kind": "code",
										"text": "`reducer.property`"
									},
									{
										"kind": "text",
										"text": " (dotted path) actually changes.\n\n**Supports**\n- Exact root prop: "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data\" }`"
									},
									{
										"kind": "text",
										"text": "\n- Exact deep path: "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data.123.title\" }`"
									},
									{
										"kind": "text",
										"text": "\n- Wildcards (pattern): "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data.*\" }`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`\"data.**\"`"
									},
									{
										"kind": "text",
										"text": "\n\n**Overloads**\n- Exact path (no "
									},
									{
										"kind": "code",
										"text": "`*`"
									},
									{
										"kind": "text",
										"text": "): returns the precise "
									},
									{
										"kind": "code",
										"text": "`PathValue`"
									},
									{
										"kind": "text",
										"text": " when "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": " is omitted\n- Exact path + "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": ": returns "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " from "
									},
									{
										"kind": "code",
										"text": "`map(value)`"
									},
									{
										"kind": "text",
										"text": "\n- Glob path (with "
									},
									{
										"kind": "code",
										"text": "`*`"
									},
									{
										"kind": "text",
										"text": "/"
									},
									{
										"kind": "code",
										"text": "`**`"
									},
									{
										"kind": "text",
										"text": "): requires "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": " and returns "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " from "
									},
									{
										"kind": "code",
										"text": "`map(slice)`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Exact path",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nconst title = useSliceProp<'todos', AppState, 'items.0.title'>(\n  { reducer: 'todos', property: 'items.0.title' }\n);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Map over exact path",
										"content": [
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst len = useSliceProp(\n  { reducer: 'todos', property: 'items' },\n  items => items.length\n);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Glob pattern over slice",
										"content": [
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst titles = useSliceProp(\n  { reducer: 'todos', property: 'items.**' },\n  slice => slice.items.map(x => x.title),\n  shallowEqual\n);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/hooks.ts",
									"line": 231,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L231"
								}
							],
							"typeParameters": [
								{
									"id": 146,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 147,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 146,
												"name": "R",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 148,
									"name": "P",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 149,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 150,
									"name": "spec",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 151,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 153,
													"name": "property",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 232,
															"character": 22,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L232"
														}
													],
													"type": {
														"type": "reference",
														"target": 148,
														"name": "P",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 152,
													"name": "reducer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 232,
															"character": 10,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L232"
														}
													],
													"type": {
														"type": "reference",
														"target": 146,
														"name": "R",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														153,
														152
													]
												}
											],
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 232,
													"character": 8,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L232"
												}
											]
										}
									}
								},
								{
									"id": 154,
									"name": "map",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 155,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 233,
													"character": 7,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L233"
												}
											],
											"signatures": [
												{
													"id": 156,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 233,
															"character": 7,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L233"
														}
													],
													"parameters": [
														{
															"id": 157,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": 146,
																			"name": "R",
																			"package": "@quojs/react",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 147,
																			"name": "S",
																			"package": "@quojs/react",
																			"refersToTypeParameter": true
																		}
																	},
																	{
																		"type": "reference",
																		"target": 148,
																		"name": "P",
																		"package": "@quojs/react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "PathValue",
																"package": "@quojs/react"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 149,
														"name": "T",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 158,
									"name": "isEqual",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 159,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 234,
													"character": 12,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L234"
												}
											],
											"signatures": [
												{
													"id": 160,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 234,
															"character": 12,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L234"
														}
													],
													"parameters": [
														{
															"id": 161,
															"name": "a",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 149,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 162,
															"name": "b",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 149,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 149,
								"name": "T",
								"package": "@quojs/react",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 163,
							"name": "useSliceProp",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fine-grained **single-path** selector for a slice.\n\nRe-renders only when the specified "
									},
									{
										"kind": "code",
										"text": "`reducer.property`"
									},
									{
										"kind": "text",
										"text": " (dotted path) actually changes.\n\n**Supports**\n- Exact root prop: "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data\" }`"
									},
									{
										"kind": "text",
										"text": "\n- Exact deep path: "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data.123.title\" }`"
									},
									{
										"kind": "text",
										"text": "\n- Wildcards (pattern): "
									},
									{
										"kind": "code",
										"text": "`{ reducer: \"todo\", property: \"data.*\" }`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`\"data.**\"`"
									},
									{
										"kind": "text",
										"text": "\n\n**Overloads**\n- Exact path (no "
									},
									{
										"kind": "code",
										"text": "`*`"
									},
									{
										"kind": "text",
										"text": "): returns the precise "
									},
									{
										"kind": "code",
										"text": "`PathValue`"
									},
									{
										"kind": "text",
										"text": " when "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": " is omitted\n- Exact path + "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": ": returns "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " from "
									},
									{
										"kind": "code",
										"text": "`map(value)`"
									},
									{
										"kind": "text",
										"text": "\n- Glob path (with "
									},
									{
										"kind": "code",
										"text": "`*`"
									},
									{
										"kind": "text",
										"text": "/"
									},
									{
										"kind": "code",
										"text": "`**`"
									},
									{
										"kind": "text",
										"text": "): requires "
									},
									{
										"kind": "code",
										"text": "`map`"
									},
									{
										"kind": "text",
										"text": " and returns "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " from "
									},
									{
										"kind": "code",
										"text": "`map(slice)`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Exact path",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nconst title = useSliceProp<'todos', AppState, 'items.0.title'>(\n  { reducer: 'todos', property: 'items.0.title' }\n);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Map over exact path",
										"content": [
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst len = useSliceProp(\n  { reducer: 'todos', property: 'items' },\n  items => items.length\n);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"name": "Glob pattern over slice",
										"content": [
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst titles = useSliceProp(\n  { reducer: 'todos', property: 'items.**' },\n  slice => slice.items.map(x => x.title),\n  shallowEqual\n);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/hooks.ts",
									"line": 236,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L236"
								}
							],
							"typeParameters": [
								{
									"id": 164,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 165,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 164,
												"name": "R",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 166,
									"name": "P",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 167,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 168,
									"name": "spec",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 169,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 171,
													"name": "property",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 237,
															"character": 22,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L237"
														}
													],
													"type": {
														"type": "reference",
														"target": 166,
														"name": "P",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 170,
													"name": "reducer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 237,
															"character": 10,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L237"
														}
													],
													"type": {
														"type": "reference",
														"target": 164,
														"name": "R",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														171,
														170
													]
												}
											],
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 237,
													"character": 8,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L237"
												}
											]
										}
									}
								},
								{
									"id": 172,
									"name": "map",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 173,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 238,
													"character": 7,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L238"
												}
											],
											"signatures": [
												{
													"id": 174,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 238,
															"character": 7,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L238"
														}
													],
													"parameters": [
														{
															"id": 175,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 167,
														"name": "T",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 176,
									"name": "isEqual",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 177,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 239,
													"character": 12,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L239"
												}
											],
											"signatures": [
												{
													"id": 178,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 239,
															"character": 12,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L239"
														}
													],
													"parameters": [
														{
															"id": 179,
															"name": "a",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 167,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 180,
															"name": "b",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 167,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 167,
								"name": "T",
								"package": "@quojs/react",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 181,
					"name": "useSliceProps",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/hooks.ts",
							"line": 306,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L306"
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "useSliceProps",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Multi-path** fine-grained selector.\n\nSubscribes to several "
									},
									{
										"kind": "code",
										"text": "`reducer.property`"
									},
									{
										"kind": "text",
										"text": " paths (supports deep & wildcard)\nand recomputes "
									},
									{
										"kind": "code",
										"text": "`selector(state)`"
									},
									{
										"kind": "text",
										"text": " when any of them change."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nconst total = useSliceProps<'todos' | 'filter', AppState, number>(\n  [\n    { reducer: 'todos',  property: ['items.**'] },\n    { reducer: 'filter', property: 'q' }\n  ],\n  (s) => s.todos.items.filter(x => x.title.includes(s.filter.q)).length\n);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/hooks.ts",
									"line": 306,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L306"
								}
							],
							"typeParameters": [
								{
									"id": 183,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Slice name union."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 184,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State record keyed by "
											},
											{
												"kind": "code",
												"text": "`R`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 183,
												"name": "R",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 185,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Derived value type."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 186,
									"name": "specs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of "
											},
											{
												"kind": "code",
												"text": "`{ reducer, property }`"
											},
											{
												"kind": "text",
												"text": ", where "
											},
											{
												"kind": "code",
												"text": "`property`"
											},
											{
												"kind": "text",
												"text": " can be a string or array of strings. Supports "
											},
											{
												"kind": "code",
												"text": "`*`"
											},
											{
												"kind": "text",
												"text": "/"
											},
											{
												"kind": "code",
												"text": "`**`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 187,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 189,
														"name": "property",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "hooks/hooks.ts",
																"line": 307,
																"character": 29,
																"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L307"
															}
														],
														"type": {
															"type": "reference",
															"target": -1,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"packageName": "@quojs/core",
																		"packagePath": "dist/types/src/types.d.ts",
																		"qualifiedName": "WithGlob"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "@quojs/core",
																				"packagePath": "dist/types/src/types.d.ts",
																				"qualifiedName": "Dotted"
																			},
																			"typeArguments": [
																				{
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "reference",
																						"target": 183,
																						"name": "R",
																						"package": "@quojs/react",
																						"refersToTypeParameter": true
																					},
																					"objectType": {
																						"type": "reference",
																						"target": 184,
																						"name": "S",
																						"package": "@quojs/react",
																						"refersToTypeParameter": true
																					}
																				}
																			],
																			"name": "Dotted",
																			"package": "@quojs/core"
																		}
																	],
																	"name": "WithGlob",
																	"package": "@quojs/core"
																}
															],
															"name": "OneOrMany",
															"package": "@quojs/react"
														}
													},
													{
														"id": 188,
														"name": "reducer",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "hooks/hooks.ts",
																"line": 307,
																"character": 17,
																"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L307"
															}
														],
														"type": {
															"type": "reference",
															"target": 183,
															"name": "R",
															"package": "@quojs/react",
															"refersToTypeParameter": true
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															189,
															188
														]
													}
												],
												"sources": [
													{
														"fileName": "hooks/hooks.ts",
														"line": 307,
														"character": 15,
														"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L307"
													}
												]
											}
										}
									}
								},
								{
									"id": 190,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`(state) => T`"
											},
											{
												"kind": "text",
												"text": " function run against the full state."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 191,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 308,
													"character": 12,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L308"
												}
											],
											"signatures": [
												{
													"id": 192,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 308,
															"character": 12,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L308"
														}
													],
													"parameters": [
														{
															"id": 193,
															"name": "state",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 184,
																"name": "S",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 185,
														"name": "T",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 194,
									"name": "isEqual",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Equality comparator for the derived value (defaults to "
											},
											{
												"kind": "code",
												"text": "`Object.is`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 195,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/hooks.ts",
													"line": 309,
													"character": 11,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L309"
												}
											],
											"signatures": [
												{
													"id": 196,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/hooks.ts",
															"line": 309,
															"character": 11,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L309"
														}
													],
													"parameters": [
														{
															"id": 197,
															"name": "a",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 185,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 198,
															"name": "b",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 185,
																"name": "T",
																"package": "@quojs/react",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "Object.is"
								}
							],
							"type": {
								"type": "reference",
								"target": 185,
								"name": "T",
								"package": "@quojs/react",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 110,
					"name": "useStore",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/hooks.ts",
							"line": 99,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 111,
							"name": "useStore",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StoreInstance",
										"target": {
											"packageName": "@quojs/core",
											"packagePath": "dist/types/src/types.d.ts",
											"qualifiedName": "StoreInstance"
										}
									},
									{
										"kind": "text",
										"text": " from "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StoreContext",
										"target": 3
									},
									{
										"kind": "text",
										"text": ".\nThrows if used outside of a "
									},
									{
										"kind": "code",
										"text": "`<StoreProvider>`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nconst store = useStore<MyAM, 'counter' | 'todos', AppState>();\nconst state = store.getState();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/hooks.ts",
									"line": 99,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L99"
								}
							],
							"typeParameters": [
								{
									"id": 112,
									"name": "AM",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Action map type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@quojs/core",
											"packagePath": "dist/types/src/types.d.ts",
											"qualifiedName": "ActionMapBase"
										},
										"name": "ActionMapBase",
										"package": "@quojs/core"
									}
								},
								{
									"id": 113,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Slice name union."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 114,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State record keyed by "
											},
											{
												"kind": "code",
												"text": "`R`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 113,
												"name": "R",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@quojs/core",
									"packagePath": "dist/types/src/types.d.ts",
									"qualifiedName": "StoreInstance"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 113,
										"name": "R",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 114,
										"name": "S",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 112,
										"name": "AM",
										"package": "@quojs/react",
										"refersToTypeParameter": true
									}
								],
								"name": "StoreInstance",
								"package": "@quojs/core"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						118,
						115,
						123,
						136,
						181,
						110
					]
				}
			],
			"sources": [
				{
					"fileName": "hooks/hooks.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/hooks.ts#L1"
				}
			]
		},
		{
			"id": 204,
			"name": "hooks/suspense",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 237,
					"name": "SuspenseSlicePropOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options for "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useSuspenseSliceProp",
								"target": 205
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 244,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional extra key to distinguish different usages over the same path.\nUseful when the same path has different "
									},
									{
										"kind": "code",
										"text": "`load`"
									},
									{
										"kind": "text",
										"text": " behaviors or parameters."
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 167,
									"character": 2,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L167"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 238,
							"name": "load",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Loader that can be sync or async.\nCalled with the **value at the path** (or the whole slice for glob paths) and the **slice** itself."
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L152"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 239,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "hooks/suspense.ts",
											"line": 152,
											"character": 8,
											"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L152"
										}
									],
									"signatures": [
										{
											"id": 240,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/suspense.ts",
													"line": 152,
													"character": 8,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L152"
												}
											],
											"parameters": [
												{
													"id": 241,
													"name": "valueAtPath",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 242,
													"name": "slice",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": 246,
																"name": "S",
																"package": "@quojs/react",
																"qualifiedName": "SuspenseSlicePropOptions.S",
																"refersToTypeParameter": true
															}
														},
														"objectType": {
															"type": "reference",
															"target": 246,
															"name": "S",
															"package": "@quojs/react",
															"qualifiedName": "SuspenseSlicePropOptions.S",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 245,
														"name": "T",
														"package": "@quojs/react",
														"qualifiedName": "SuspenseSlicePropOptions.T",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 245,
																"name": "T",
																"package": "@quojs/react",
																"qualifiedName": "SuspenseSlicePropOptions.T",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 243,
							"name": "staleTime",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional cache **stale time** in milliseconds.\n\n- "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " → **no expiry** (cache until invalidated by path changes).\n- "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": "    → expires **immediately** (effectively no time-based caching).\n- "
									},
									{
										"kind": "code",
										"text": "`>0`"
									},
									{
										"kind": "text",
										"text": "   → entry is fresh until "
									},
									{
										"kind": "code",
										"text": "`now + staleTime`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 161,
									"character": 2,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L161"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								244,
								238,
								243
							]
						}
					],
					"sources": [
						{
							"fileName": "hooks/suspense.ts",
							"line": 147,
							"character": 17,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L147"
						}
					],
					"typeParameters": [
						{
							"id": 245,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The value produced by "
									},
									{
										"kind": "code",
										"text": "`load`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						},
						{
							"id": 246,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The store state record keyed by reducer names."
									}
								]
							}
						}
					]
				},
				{
					"id": 247,
					"name": "SuspenseSlicePropsOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options for "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useSuspenseSliceProps",
								"target": 216
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"children": [
						{
							"id": 253,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra cache key segment to distinguish different derived computations."
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 268,
									"character": 2,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L268"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 248,
							"name": "load",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Loader given the **full state** to produce "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " (may be async)."
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 258,
									"character": 2,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L258"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 249,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "hooks/suspense.ts",
											"line": 258,
											"character": 8,
											"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L258"
										}
									],
									"signatures": [
										{
											"id": 250,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "hooks/suspense.ts",
													"line": 258,
													"character": 8,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L258"
												}
											],
											"parameters": [
												{
													"id": 251,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 255,
														"name": "S",
														"package": "@quojs/react",
														"qualifiedName": "SuspenseSlicePropsOptions.S",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 254,
														"name": "T",
														"package": "@quojs/react",
														"qualifiedName": "SuspenseSlicePropsOptions.T",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 254,
																"name": "T",
																"package": "@quojs/react",
																"qualifiedName": "SuspenseSlicePropsOptions.T",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 252,
							"name": "staleTime",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stale time in ms (see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SuspenseSlicePropOptions.staleTime",
										"target": 243
									},
									{
										"kind": "text",
										"text": " for semantics)."
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 263,
									"character": 2,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L263"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								253,
								248,
								252
							]
						}
					],
					"sources": [
						{
							"fileName": "hooks/suspense.ts",
							"line": 254,
							"character": 17,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L254"
						}
					],
					"typeParameters": [
						{
							"id": 254,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value produced by "
									},
									{
										"kind": "code",
										"text": "`load`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						},
						{
							"id": 255,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "State record keyed by reducer names."
									}
								]
							}
						}
					]
				},
				{
					"id": 234,
					"name": "clearSuspenseCache",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/suspense.ts",
							"line": 399,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L399"
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "clearSuspenseCache",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clears the entire Suspense cache."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclearSuspenseCache();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 399,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L399"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 226,
					"name": "invalidateSliceProp",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/suspense.ts",
							"line": 373,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L373"
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "invalidateSliceProp",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Invalidates the cache entry for a particular "
									},
									{
										"kind": "code",
										"text": "`(reducer, property)`"
									},
									{
										"kind": "text",
										"text": " key."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ninvalidateSliceProp('todos', 'items.**'); // force refetch for that key\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 373,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L373"
								}
							],
							"parameters": [
								{
									"id": 228,
									"name": "reducer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Slice name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 229,
									"name": "property",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Dotted path (or glob) string."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 230,
									"name": "extraKey",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional extra key used when loading."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 231,
					"name": "invalidateSlicePropsByReducer",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/suspense.ts",
							"line": 387,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L387"
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "invalidateSlicePropsByReducer",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Invalidates **all** cache entries under a given reducer (slice)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ninvalidateSlicePropsByReducer('todos');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 387,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L387"
								}
							],
							"parameters": [
								{
									"id": 233,
									"name": "reducer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 205,
					"name": "useSuspenseSliceProp",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/suspense.ts",
							"line": 216,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L216"
						}
					],
					"signatures": [
						{
							"id": 206,
							"name": "useSuspenseSliceProp",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Suspense version of a single-path selector (similar to "
									},
									{
										"kind": "code",
										"text": "`useSliceProp`"
									},
									{
										"kind": "text",
										"text": ").\n\nSubscribes to an **exact** "
									},
									{
										"kind": "code",
										"text": "`reducer.property`"
									},
									{
										"kind": "text",
										"text": " path, invalidates the cache on changes,\nand reads through a Suspense cache—**throwing a promise** while the "
									},
									{
										"kind": "code",
										"text": "`load`"
									},
									{
										"kind": "text",
										"text": " function resolves."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The loaded value "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ". Will **suspend** while loading and rethrow errors in the error boundary."
											}
										]
									},
									{
										"tag": "@remarks",
										"content": [
											{
												"kind": "text",
												"text": "- If you pass a **glob** path (with "
											},
											{
												"kind": "code",
												"text": "`*`"
											},
											{
												"kind": "text",
												"text": "/"
											},
											{
												"kind": "code",
												"text": "`**`"
											},
											{
												"kind": "text",
												"text": "), the path is treated as “match anything” and the loader\n  receives the **entire slice** as "
											},
											{
												"kind": "code",
												"text": "`valueAtPath`"
											},
											{
												"kind": "text",
												"text": ". (TypeScript will not enforce globs here.)\n- For “cache until path changes”, use "
											},
											{
												"kind": "code",
												"text": "`staleTime: null`"
											},
											{
												"kind": "text",
												"text": ". Passing "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": " expires immediately."
											}
										]
									},
									{
										"tag": "@example",
										"name": "Basic Suspense usage",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { Suspense } from 'react';\n\nfunction UserPanel({ id }: { id: string }) {\n  const user = useSuspenseSliceProp<'users', AppState, 'entities.${string}', User>(\n    { reducer: 'users', property: `entities.${id}` as any },\n    {\n      load: (entity, slice) => entity ?? fetch(`/api/users/${id}`).then(r => r.json()),\n      staleTime: 60_000 // 1 minute freshness\n    }\n  );\n  return <div>{user.name}</div>;\n}\n\nexport function Page() {\n  return (\n    <Suspense fallback=\"loading...\">\n      <UserPanel id=\"42\" />\n    </Suspense>\n  );\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 216,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L216"
								}
							],
							"typeParameters": [
								{
									"id": 207,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Slice name union."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 208,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State record keyed by "
											},
											{
												"kind": "code",
												"text": "`R`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 207,
												"name": "R",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 209,
									"name": "P",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Dotted path type inside "
											},
											{
												"kind": "code",
												"text": "`S[R]`"
											},
											{
												"kind": "text",
												"text": " (exact path)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 210,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value type returned by "
											},
											{
												"kind": "code",
												"text": "`options.load`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 211,
									"name": "storeSpec",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`{ reducer, property }`"
											},
											{
												"kind": "text",
												"text": " pointing at a single path."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 212,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 214,
													"name": "property",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/suspense.ts",
															"line": 217,
															"character": 27,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L217"
														}
													],
													"type": {
														"type": "reference",
														"target": 209,
														"name": "P",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 213,
													"name": "reducer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "hooks/suspense.ts",
															"line": 217,
															"character": 15,
															"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L217"
														}
													],
													"type": {
														"type": "reference",
														"target": 207,
														"name": "R",
														"package": "@quojs/react",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														214,
														213
													]
												}
											],
											"sources": [
												{
													"fileName": "hooks/suspense.ts",
													"line": 217,
													"character": 13,
													"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L217"
												}
											]
										}
									}
								},
								{
									"id": 215,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Loader/staleTime/key options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 237,
										"typeArguments": [
											{
												"type": "reference",
												"target": 210,
												"name": "T",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 208,
												"name": "S",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											}
										],
										"name": "SuspenseSlicePropOptions",
										"package": "@quojs/react"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 210,
								"name": "T",
								"package": "@quojs/react",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 216,
					"name": "useSuspenseSliceProps",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "hooks/suspense.ts",
							"line": 319,
							"character": 16,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L319"
						}
					],
					"signatures": [
						{
							"id": 217,
							"name": "useSuspenseSliceProps",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Suspense version of a multi-path selector (similar to "
									},
									{
										"kind": "code",
										"text": "`useSliceProps`"
									},
									{
										"kind": "text",
										"text": ").\n\nSubscribes to **multiple** "
									},
									{
										"kind": "code",
										"text": "`reducer.property`"
									},
									{
										"kind": "text",
										"text": " paths (supports globs),\ninvalidates the cache when **any** subscribed path changes, and returns a value\nloaded through the Suspense cache."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "Derived list with Suspense",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { Suspense } from 'react';\n\nfunction VisibleTodos() {\n  const items = useSuspenseSliceProps<\n    'todos' | 'filter',\n    AppState,\n    { id: string; title: string }[]\n  >(\n    [\n      { reducer: 'todos',  property: 'items.**' },\n      { reducer: 'filter', property: 'q' }\n    ],\n    {\n      load: (s) => s.todos.items.filter(x => x.title.includes(s.filter.q)),\n      staleTime: null // cache until any of the subscribed paths change\n    }\n  );\n  return <ul>{items.map(i => <li key={i.id}>{i.title}</li>)}</ul>;\n}\n\nexport function Page() {\n  return (\n    <Suspense fallback=\"loading...\">\n      <VisibleTodos />\n    </Suspense>\n  );\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "hooks/suspense.ts",
									"line": 319,
									"character": 16,
									"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L319"
								}
							],
							"typeParameters": [
								{
									"id": 218,
									"name": "R",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Slice name union."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 219,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State record keyed by "
											},
											{
												"kind": "code",
												"text": "`R`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 218,
												"name": "R",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 220,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value type returned by "
											},
											{
												"kind": "code",
												"text": "`options.load`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 221,
									"name": "specs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of "
											},
											{
												"kind": "code",
												"text": "`{ reducer, property }`"
											},
											{
												"kind": "text",
												"text": ", where "
											},
											{
												"kind": "code",
												"text": "`property`"
											},
											{
												"kind": "text",
												"text": " can be a dotted string,\n                 a glob ("
											},
											{
												"kind": "code",
												"text": "`*`"
											},
											{
												"kind": "text",
												"text": "/"
											},
											{
												"kind": "code",
												"text": "`**`"
											},
											{
												"kind": "text",
												"text": "), or an array of globs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 222,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 224,
														"name": "property",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "hooks/suspense.ts",
																"line": 320,
																"character": 29,
																"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L320"
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "templateLiteral",
																	"head": "",
																	"tail": [
																		[
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			"*"
																		],
																		[
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			""
																		]
																	]
																},
																{
																	"type": "intersection",
																	"types": [
																		{
																			"type": "typeOperator",
																			"operator": "keyof",
																			"target": {
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "reference",
																					"target": 218,
																					"name": "R",
																					"package": "@quojs/react",
																					"refersToTypeParameter": true
																				},
																				"objectType": {
																					"type": "reference",
																					"target": 219,
																					"name": "S",
																					"package": "@quojs/react",
																					"refersToTypeParameter": true
																				}
																			}
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																},
																{
																	"type": "reference",
																	"target": {
																		"packageName": "@quojs/core",
																		"packagePath": "dist/types/src/types.d.ts",
																		"qualifiedName": "Path"
																	},
																	"typeArguments": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": 218,
																				"name": "R",
																				"package": "@quojs/react",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 219,
																				"name": "S",
																				"package": "@quojs/react",
																				"refersToTypeParameter": true
																			}
																		}
																	],
																	"name": "Path",
																	"package": "@quojs/core"
																},
																{
																	"type": "typeOperator",
																	"operator": "readonly",
																	"target": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"packageName": "@quojs/core",
																				"packagePath": "dist/types/src/types.d.ts",
																				"qualifiedName": "WithGlob"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "@quojs/core",
																						"packagePath": "dist/types/src/types.d.ts",
																						"qualifiedName": "Dotted"
																					},
																					"typeArguments": [
																						{
																							"type": "indexedAccess",
																							"indexType": {
																								"type": "reference",
																								"target": 218,
																								"name": "R",
																								"package": "@quojs/react",
																								"refersToTypeParameter": true
																							},
																							"objectType": {
																								"type": "reference",
																								"target": 219,
																								"name": "S",
																								"package": "@quojs/react",
																								"refersToTypeParameter": true
																							}
																						}
																					],
																					"name": "Dotted",
																					"package": "@quojs/core"
																				}
																			],
																			"name": "WithGlob",
																			"package": "@quojs/core"
																		}
																	}
																}
															]
														}
													},
													{
														"id": 223,
														"name": "reducer",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "hooks/suspense.ts",
																"line": 320,
																"character": 17,
																"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L320"
															}
														],
														"type": {
															"type": "reference",
															"target": 218,
															"name": "R",
															"package": "@quojs/react",
															"refersToTypeParameter": true
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															224,
															223
														]
													}
												],
												"sources": [
													{
														"fileName": "hooks/suspense.ts",
														"line": 320,
														"character": 15,
														"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L320"
													}
												]
											}
										}
									}
								},
								{
									"id": 225,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Loader/staleTime/key options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 247,
										"typeArguments": [
											{
												"type": "reference",
												"target": 220,
												"name": "T",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 219,
												"name": "S",
												"package": "@quojs/react",
												"refersToTypeParameter": true
											}
										],
										"name": "SuspenseSlicePropsOptions",
										"package": "@quojs/react"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 220,
								"name": "T",
								"package": "@quojs/react",
								"refersToTypeParameter": true
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						237,
						247
					]
				},
				{
					"title": "Functions",
					"children": [
						234,
						226,
						231,
						205,
						216
					]
				}
			],
			"sources": [
				{
					"fileName": "hooks/suspense.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/hooks/suspense.ts#L1"
				}
			]
		},
		{
			"id": 1,
			"name": "index",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 273,
					"name": "clearSuspenseCache",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 17,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L17"
						}
					],
					"target": 234
				},
				{
					"id": 275,
					"name": "createQuoHooks",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L22"
						}
					],
					"target": 10
				},
				{
					"id": 271,
					"name": "invalidateSliceProp",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 15,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L15"
						}
					],
					"target": 226
				},
				{
					"id": 272,
					"name": "invalidateSlicePropsByReducer",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 16,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L16"
						}
					],
					"target": 231
				},
				{
					"id": 268,
					"name": "shallowEqual",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 9,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L9"
						}
					],
					"target": 118
				},
				{
					"id": 262,
					"name": "StoreContext",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 2,
							"character": 9,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L2"
						}
					],
					"target": 3
				},
				{
					"id": 261,
					"name": "StoreProvider",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 1,
							"character": 9,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L1"
						}
					],
					"target": 257
				},
				{
					"id": 278,
					"name": "SuspenseSlicePropOptions",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 26,
							"character": 14,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L26"
						}
					],
					"target": 237
				},
				{
					"id": 279,
					"name": "SuspenseSlicePropsOptions",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 26,
							"character": 40,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L26"
						}
					],
					"target": 247
				},
				{
					"id": 264,
					"name": "useDispatch",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 5,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L5"
						}
					],
					"target": 115
				},
				{
					"id": 265,
					"name": "useSelector",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 6,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L6"
						}
					],
					"target": 123
				},
				{
					"id": 266,
					"name": "useSliceProp",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 7,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L7"
						}
					],
					"target": 136
				},
				{
					"id": 280,
					"name": "UseSliceProp",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 27,
							"character": 14,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L27"
						}
					],
					"target": 44
				},
				{
					"id": 267,
					"name": "useSliceProps",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 8,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L8"
						}
					],
					"target": 181
				},
				{
					"id": 281,
					"name": "UseSliceProps",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 27,
							"character": 28,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L27"
						}
					],
					"target": 89
				},
				{
					"id": 263,
					"name": "useStore",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 4,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L4"
						}
					],
					"target": 110
				},
				{
					"id": 269,
					"name": "useSuspenseSliceProp",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 13,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L13"
						}
					],
					"target": 205
				},
				{
					"id": 270,
					"name": "useSuspenseSliceProps",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 14,
							"character": 0,
							"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L14"
						}
					],
					"target": 216
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						273,
						275,
						271,
						272,
						268,
						262,
						261,
						278,
						279,
						264,
						265,
						266,
						280,
						267,
						281,
						263,
						269,
						270
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/quojs/quojs/blob/bb0aab212261db76d8cdd24be568e1eb39570c11/packages/react/src/index.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				2,
				256,
				4,
				109,
				204,
				1
			]
		}
	],
	"packageName": "@quojs/react",
	"symbolIdMap": {
		"1": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": ""
		},
		"2": {
			"packageName": "@quojs/react",
			"packagePath": "src/context/StoreContext.ts",
			"qualifiedName": ""
		},
		"3": {
			"packageName": "@quojs/react",
			"packagePath": "src/context/StoreContext.ts",
			"qualifiedName": "StoreContext"
		},
		"4": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": ""
		},
		"5": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "shallowEqual"
		},
		"6": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "shallowEqual"
		},
		"7": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "T"
		},
		"8": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "a"
		},
		"9": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "b"
		},
		"10": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "createQuoHooks"
		},
		"11": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "createQuoHooks"
		},
		"12": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "R"
		},
		"13": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "S"
		},
		"14": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "AM"
		},
		"15": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "StoreContext"
		},
		"16": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__object"
		},
		"17": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__object.useStore"
		},
		"18": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "useStore"
		},
		"19": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "useStore"
		},
		"20": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__object.useDispatch"
		},
		"21": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "useDispatch"
		},
		"22": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "useDispatch"
		},
		"23": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__object.useSelector"
		},
		"24": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "useSelector"
		},
		"25": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "useSelector"
		},
		"26": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "T"
		},
		"27": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "selector"
		},
		"28": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"29": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"30": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "state"
		},
		"31": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "isEqual"
		},
		"32": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"33": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"34": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "a"
		},
		"35": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "b"
		},
		"36": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__object.useSliceProp"
		},
		"37": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__object.useSliceProps"
		},
		"38": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__object.shallowEqual"
		},
		"39": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "shallowEqual"
		},
		"40": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "shallowEqual"
		},
		"41": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "T"
		},
		"42": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "a"
		},
		"43": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "b"
		},
		"44": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "UseSliceProp"
		},
		"45": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"46": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"47": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "R1"
		},
		"48": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "P"
		},
		"49": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "spec"
		},
		"50": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type.reducer"
		},
		"52": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type.property"
		},
		"53": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"54": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "R1"
		},
		"55": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "P"
		},
		"56": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "T"
		},
		"57": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "spec"
		},
		"58": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"59": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type.reducer"
		},
		"60": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type.property"
		},
		"61": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "map"
		},
		"62": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"63": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"64": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "value"
		},
		"65": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "isEqual"
		},
		"66": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"67": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"68": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "a"
		},
		"69": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "b"
		},
		"70": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"71": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "R1"
		},
		"72": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "P"
		},
		"73": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "T"
		},
		"74": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "spec"
		},
		"75": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"76": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type.reducer"
		},
		"77": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type.property"
		},
		"78": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "map"
		},
		"79": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"80": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"81": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "value"
		},
		"82": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "isEqual"
		},
		"83": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"84": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"85": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "a"
		},
		"86": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "b"
		},
		"87": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "R"
		},
		"88": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "S"
		},
		"89": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "UseSliceProps"
		},
		"90": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"91": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"92": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "R1"
		},
		"93": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "T"
		},
		"94": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "specs"
		},
		"95": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"96": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type.reducer"
		},
		"97": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type.property"
		},
		"98": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "selector"
		},
		"99": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"100": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"101": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "state"
		},
		"102": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "isEqual"
		},
		"103": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"104": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "__type"
		},
		"105": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "a"
		},
		"106": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "b"
		},
		"107": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "R"
		},
		"108": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/createQuoHooks.ts",
			"qualifiedName": "S"
		},
		"109": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": ""
		},
		"110": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useStore"
		},
		"111": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useStore"
		},
		"112": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "AM"
		},
		"113": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "R"
		},
		"114": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "S"
		},
		"115": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useDispatch"
		},
		"116": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useDispatch"
		},
		"117": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "AM"
		},
		"118": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "shallowEqual"
		},
		"119": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "shallowEqual"
		},
		"120": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "T"
		},
		"121": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "a"
		},
		"122": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "b"
		},
		"123": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useSelector"
		},
		"124": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useSelector"
		},
		"125": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "S"
		},
		"126": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "T"
		},
		"127": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "selector"
		},
		"128": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"129": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"130": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "state"
		},
		"131": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "isEqual"
		},
		"132": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"133": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"134": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "a"
		},
		"135": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "b"
		},
		"136": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useSliceProp"
		},
		"137": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useSliceProp"
		},
		"138": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "R"
		},
		"139": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "S"
		},
		"140": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "P"
		},
		"141": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "spec"
		},
		"142": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"143": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type.reducer"
		},
		"144": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type.property"
		},
		"145": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useSliceProp"
		},
		"146": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "R"
		},
		"147": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "S"
		},
		"148": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "P"
		},
		"149": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "T"
		},
		"150": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "spec"
		},
		"151": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"152": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type.reducer"
		},
		"153": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type.property"
		},
		"154": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "map"
		},
		"155": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"156": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"157": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "value"
		},
		"158": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "isEqual"
		},
		"159": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"160": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"161": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "a"
		},
		"162": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "b"
		},
		"163": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useSliceProp"
		},
		"164": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "R"
		},
		"165": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "S"
		},
		"166": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "P"
		},
		"167": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "T"
		},
		"168": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "spec"
		},
		"169": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"170": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type.reducer"
		},
		"171": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type.property"
		},
		"172": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "map"
		},
		"173": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"174": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"175": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "value"
		},
		"176": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "isEqual"
		},
		"177": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"178": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"179": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "a"
		},
		"180": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "b"
		},
		"181": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useSliceProps"
		},
		"182": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "useSliceProps"
		},
		"183": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "R"
		},
		"184": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "S"
		},
		"185": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "T"
		},
		"186": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "specs"
		},
		"187": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"188": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type.reducer"
		},
		"189": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type.property"
		},
		"190": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "selector"
		},
		"191": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"192": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"193": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "state"
		},
		"194": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "isEqual"
		},
		"195": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"196": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "__type"
		},
		"197": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "a"
		},
		"198": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/hooks.ts",
			"qualifiedName": "b"
		},
		"204": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": ""
		},
		"205": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "useSuspenseSliceProp"
		},
		"206": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "useSuspenseSliceProp"
		},
		"207": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "R"
		},
		"208": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "S"
		},
		"209": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "P"
		},
		"210": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "T"
		},
		"211": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "storeSpec"
		},
		"212": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type"
		},
		"213": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type.reducer"
		},
		"214": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type.property"
		},
		"215": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "options"
		},
		"216": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "useSuspenseSliceProps"
		},
		"217": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "useSuspenseSliceProps"
		},
		"218": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "R"
		},
		"219": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "S"
		},
		"220": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "T"
		},
		"221": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "specs"
		},
		"222": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type"
		},
		"223": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type.reducer"
		},
		"224": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type.property"
		},
		"225": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "options"
		},
		"226": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "invalidateSliceProp"
		},
		"227": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "invalidateSliceProp"
		},
		"228": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "reducer"
		},
		"229": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "property"
		},
		"230": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "extraKey"
		},
		"231": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "invalidateSlicePropsByReducer"
		},
		"232": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "invalidateSlicePropsByReducer"
		},
		"233": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "reducer"
		},
		"234": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "clearSuspenseCache"
		},
		"235": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "clearSuspenseCache"
		},
		"237": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropOptions"
		},
		"238": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropOptions.load"
		},
		"239": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type"
		},
		"240": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type"
		},
		"241": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "valueAtPath"
		},
		"242": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "slice"
		},
		"243": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropOptions.staleTime"
		},
		"244": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropOptions.key"
		},
		"245": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropOptions.T"
		},
		"246": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropOptions.S"
		},
		"247": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropsOptions"
		},
		"248": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropsOptions.load"
		},
		"249": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type"
		},
		"250": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "__type"
		},
		"251": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "state"
		},
		"252": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropsOptions.staleTime"
		},
		"253": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropsOptions.key"
		},
		"254": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropsOptions.T"
		},
		"255": {
			"packageName": "@quojs/react",
			"packagePath": "src/hooks/suspense.ts",
			"qualifiedName": "SuspenseSlicePropsOptions.S"
		},
		"256": {
			"packageName": "@quojs/react",
			"packagePath": "src/context/StoreProvider.tsx",
			"qualifiedName": ""
		},
		"257": {
			"packageName": "@quojs/react",
			"packagePath": "src/context/StoreProvider.tsx",
			"qualifiedName": "StoreProvider"
		},
		"258": {
			"packageName": "@quojs/react",
			"packagePath": "src/context/StoreProvider.tsx",
			"qualifiedName": "__type"
		},
		"259": {
			"packageName": "@quojs/react",
			"packagePath": "src/context/StoreProvider.tsx",
			"qualifiedName": "__type.store"
		},
		"260": {
			"packageName": "@quojs/react",
			"packagePath": "src/context/StoreProvider.tsx",
			"qualifiedName": "__type.children"
		},
		"261": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "StoreProvider"
		},
		"262": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "StoreContext"
		},
		"263": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "useStore"
		},
		"264": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "useDispatch"
		},
		"265": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "useSelector"
		},
		"266": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "useSliceProp"
		},
		"267": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "useSliceProps"
		},
		"268": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "shallowEqual"
		},
		"269": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "useSuspenseSliceProp"
		},
		"270": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "useSuspenseSliceProps"
		},
		"271": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "invalidateSliceProp"
		},
		"272": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "invalidateSlicePropsByReducer"
		},
		"273": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "clearSuspenseCache"
		},
		"275": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "createQuoHooks"
		},
		"278": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "SuspenseSlicePropOptions"
		},
		"279": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "SuspenseSlicePropsOptions"
		},
		"280": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "UseSliceProp"
		},
		"281": {
			"packageName": "@quojs/react",
			"packagePath": "src/index.ts",
			"qualifiedName": "UseSliceProps"
		}
	},
	"files": {
		"entries": {
			"1": "src/index.ts",
			"2": "src/context/StoreContext.ts",
			"3": "src/hooks/createQuoHooks.ts",
			"4": "src/hooks/hooks.ts",
			"5": "src/hooks/suspense.ts",
			"6": "src/context/StoreProvider.tsx"
		},
		"reflections": {
			"1": 1,
			"2": 2,
			"3": 4,
			"4": 109,
			"5": 204,
			"6": 256
		}
	}
}
